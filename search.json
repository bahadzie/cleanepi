[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 readepi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/cleanepi.html","id":"clean-input-data","dir":"Articles","previous_headings":"","what":"Clean input data","title":"cleanepi","text":"importing dataset R, use cleanepi() function apply checks .","code":"## use the test data and implement the tests"},{"path":[]},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karim Mané. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mané K (2023). cleanepi: Data Cleaning Package. R package version 0.0.1.","code":"@Manual{,   title = {cleanepi: Data Cleaning Package},   author = {Karim Mané},   year = {2023},   note = {R package version 0.0.1}, }"},{"path":"/index.html","id":"cleanepi","dir":"","previous_headings":"","what":"Data Cleaning Package ","title":"Data Cleaning Package ","text":"cleanepi provides functions clean epidemiological data provided form data frame related data type.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Cleaning Package ","text":"can install development version cleanepi GitHub :","code":"# install.packages(\"remotes\") # remotes::install_github(\"epiverse-trace/cleanepi\", build_vignettes=TRUE) library(cleanepi)"},{"path":"/index.html","id":"manual","dir":"","previous_headings":"","what":"Manual","title":"Data Cleaning Package ","text":"","code":"browseVignettes(\"cleanepi\") #> No vignettes found by browseVignettes(\"cleanepi\")"},{"path":[]},{"path":[]},{"path":"/index.html","id":"lifecycle","dir":"","previous_headings":"Development","what":"Lifecycle","title":"Data Cleaning Package ","text":"package currently concept, defined RECON software lifecycle. means essential features mechanisms still developed, package ready use outside development team.","code":""},{"path":"/index.html","id":"contributions","dir":"","previous_headings":"Development","what":"Contributions","title":"Data Cleaning Package ","text":"Contributions welcome via pull requests. Contributors project include: Karim Mané","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"Development","what":"Code of Conduct","title":"Data Cleaning Package ","text":"Please note cleanepi project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/as_Date.html","id":null,"dir":"Reference","previous_headings":"","what":"function to reformat the date — as_Date","title":"function to reformat the date — as_Date","text":"function reformat date","code":""},{"path":"/reference/as_Date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to reformat the date — as_Date","text":"","code":"as_Date(x, format = c(\"ymd\", \"dmy\", \"mdy\"))"},{"path":"/reference/calculate_age.html","id":null,"dir":"Reference","previous_headings":"","what":"function to calculate age from date of birth — calculate_age","title":"function to calculate age from date of birth — calculate_age","text":"function calculate age date birth","code":""},{"path":"/reference/calculate_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to calculate age from date of birth — calculate_age","text":"","code":"calculate_age(   data,   date.column.name = NULL,   end.date = Sys.Date(),   format = NULL,   age.in = \"years\" )"},{"path":"/reference/calculate_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to calculate age from date of birth — calculate_age","text":"data data frame date column standardise date.column.name name date column interest. default: 'Date', 'DATE', 'date' end.date end date. default: today's date format format date values date column age.character string specify whether calculate age 'years', 'months', 'days', 'weeks'. default : 'years'","code":""},{"path":"/reference/calculate_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"function to calculate age from date of birth — calculate_age","text":"data frame bellow 1 2 extra columns compared input data frame \"age_years\", \"age_months\", \"age_weeks\", \"age_days\", depending value 'age.' parameter \"remainder_days\": column number remaining days age converted weeks months","code":""},{"path":"/reference/checkPrefix.html","id":null,"dir":"Reference","previous_headings":"","what":"function to check the prefix of the subject IDs — checkPrefix","title":"function to check the prefix of the subject IDs — checkPrefix","text":"function check prefix subject IDs","code":""},{"path":"/reference/checkPrefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to check the prefix of the subject IDs — checkPrefix","text":"","code":"checkPrefix(x, prefix)"},{"path":"/reference/checkSuffix.html","id":null,"dir":"Reference","previous_headings":"","what":"function to check the suffix of the subject IDs — checkSuffix","title":"function to check the suffix of the subject IDs — checkSuffix","text":"function check suffix subject IDs","code":""},{"path":"/reference/checkSuffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to check the suffix of the subject IDs — checkSuffix","text":"","code":"checkSuffix(x, suffix)"},{"path":"/reference/check_date_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the sequence of event dates — check_date_sequence","title":"Check the sequence of event dates — check_date_sequence","text":"function used check whether date sequence columns specified user correct .","code":""},{"path":"/reference/check_date_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the sequence of event dates — check_date_sequence","text":"","code":"check_date_sequence(data, event.cols, remove.bad.seq = TRUE)"},{"path":"/reference/check_date_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the sequence of event dates — check_date_sequence","text":"data input data frame event.cols vector comma-separated list names event columns. Users specify least 2 column names. column names provided expected order. example: event.cols = c(\"DS\",\"DH\",\"DD\") DS=date symptoms onset, DH=date hospitalization, DD=date death remove.bad.seq Boolean specify rows incorrect order filtered . default TRUE","code":""},{"path":"/reference/check_date_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the sequence of event dates — check_date_sequence","text":"data frame rows incorrect date sequence removed remove.bad.seq=TRUE, input data frame ","code":""},{"path":"/reference/check_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"function to check the input data — check_input_data","title":"function to check the input data — check_input_data","text":"function check input data","code":""},{"path":"/reference/check_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to check the input data — check_input_data","text":"","code":"check_input_data(data, date.column.name)"},{"path":"/reference/check_subject_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the subject IDs complies with user-specified format — check_subject_ids","title":"Check whether the subject IDs complies with user-specified format — check_subject_ids","text":"Check whether subject IDs complies user-specified format","code":""},{"path":"/reference/check_subject_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the subject IDs complies with user-specified format — check_subject_ids","text":"","code":"check_subject_ids(   data = NULL,   id.position = 1,   format = NULL,   check = TRUE,   prefix = NULL,   suffix = NULL,   range = NULL )"},{"path":"/reference/check_subject_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether the subject IDs complies with user-specified format — check_subject_ids","text":"data data frame interest id.position column position variable unique identifies subjects. specified column subject IDs first column. default 1. format template correct format subject IDs check boolean specifies whether clean subject IDs prefix prefix used subject IDs suffix prefix used subject IDs range vector range numbers sample IDs","code":""},{"path":"/reference/check_subject_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the subject IDs complies with user-specified format — check_subject_ids","text":"display messages incorrect subject IDs, nothing IDs correct.","code":""},{"path":"/reference/check_subject_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether the subject IDs complies with user-specified format — check_subject_ids","text":"","code":"check_subject_ids(data=data.table::fread(system.file(\"extdata\",\"test.txt\", package = \"cleanepi\")),                   id.position=1,                   format=\"PS000P2\",                   check=TRUE,                   prefix=\"PS\",                   suffix=\"P2\",                   range=c(0,100)                   ) #> Error in loadNamespace(x): there is no package called ‘checkmate’"},{"path":"/reference/cleanepi.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean data — cleanepi","title":"Clean data — cleanepi","text":"function first function applied data frame \"dirty data\". clean column names, detect remove duplicates, remove empty records columns, remove constant columns, replace missing value NA.","code":""},{"path":"/reference/cleanepi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean data — cleanepi","text":"","code":"cleanepi(   data,   clean.col.names = FALSE,   remove.duplicates = FALSE,   duplicates.from = NULL,   remove.empty = FALSE,   remove.constant = FALSE,   replace.missing = FALSE,   na.comes.as = NULL,   replace.na.at = NULL,   replace.na.in.type = NULL )"},{"path":"/reference/cleanepi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean data — cleanepi","text":"data input data frame clean.col.names whether cleanup column name . default FALSE remove.duplicates whether detect duplicated records . default FALSE duplicates.vector columns names use looking duplicates. used remove.duplicates=TRUE remove.empty whether remove records column . default FALSE remove.constant whether remove constant columns . default FALSE replace.missing whether replace missing value characters NA . default FALSE na.comes.characters represent missing data data frame. used replace.missing=TRUE replace.na.vector columns characters represent missing data replaced NA. used replace.missing=TRUE replace.na..type string specify column type replace characters represent missing data. missing characters replaced NA character columns, value character","code":""},{"path":"/reference/cleanepi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean data — cleanepi","text":"data frame records columns passed checks.","code":""},{"path":"/reference/detect_complex_format.html","id":null,"dir":"Reference","previous_headings":"","what":"function to detect complex format — detect_complex_format","title":"function to detect complex format — detect_complex_format","text":"function detect complex format","code":""},{"path":"/reference/detect_complex_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to detect complex format — detect_complex_format","text":"","code":"detect_complex_format(x)"},{"path":"/reference/detect_date_format.html","id":null,"dir":"Reference","previous_headings":"","what":"function to detect the date format with only 1 separator — detect_date_format","title":"function to detect the date format with only 1 separator — detect_date_format","text":"function detect date format 1 separator","code":""},{"path":"/reference/detect_date_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to detect the date format with only 1 separator — detect_date_format","text":"","code":"detect_date_format(x)"},{"path":"/reference/detect_date_separator.html","id":null,"dir":"Reference","previous_headings":"","what":"function to detect the special character that is the separator in the date values — detect_date_separator","title":"function to detect the special character that is the separator in the date values — detect_date_separator","text":"function detect special character separator date values","code":""},{"path":"/reference/detect_date_separator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to detect the special character that is the separator in the date values — detect_date_separator","text":"","code":"detect_date_separator(x)"},{"path":"/reference/detect_day_or_month.html","id":null,"dir":"Reference","previous_headings":"","what":"function to detect whether it's day or month — detect_day_or_month","title":"function to detect whether it's day or month — detect_day_or_month","text":"function detect whether day month","code":""},{"path":"/reference/detect_day_or_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to detect whether it's day or month — detect_day_or_month","text":"","code":"detect_day_or_month(x)"},{"path":"/reference/detect_simple_format.html","id":null,"dir":"Reference","previous_headings":"","what":"function to get simple format — detect_simple_format","title":"function to get simple format — detect_simple_format","text":"function get simple format","code":""},{"path":"/reference/detect_simple_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to get simple format — detect_simple_format","text":"","code":"detect_simple_format(x)"},{"path":"/reference/get_part1.html","id":null,"dir":"Reference","previous_headings":"","what":"functions to split up the date value — get_part1","title":"functions to split up the date value — get_part1","text":"functions split date value","code":""},{"path":"/reference/get_part1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"functions to split up the date value — get_part1","text":"","code":"get_part1(x, sep)"},{"path":"/reference/get_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"get sum from number — get_sum","title":"get sum from number — get_sum","text":"get sum number","code":""},{"path":"/reference/get_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get sum from number — get_sum","text":"","code":"get_sum(x)"},{"path":"/reference/is_order.html","id":null,"dir":"Reference","previous_headings":"","what":"function to check the sequence of the event — is_order","title":"function to check the sequence of the event — is_order","text":"function check sequence event","code":""},{"path":"/reference/is_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to check the sequence of the event — is_order","text":"","code":"is_order(x)"},{"path":"/reference/numbers_only.html","id":null,"dir":"Reference","previous_headings":"","what":"detect whether a string contains only numbers — numbers_only","title":"detect whether a string contains only numbers — numbers_only","text":"detect whether string contains numbers","code":""},{"path":"/reference/numbers_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"detect whether a string contains only numbers — numbers_only","text":"","code":"numbers_only(x)"},{"path":"/reference/only_letters.html","id":null,"dir":"Reference","previous_headings":"","what":"extract letters from a string — only_letters","title":"extract letters from a string — only_letters","text":"extract letters string","code":""},{"path":"/reference/only_letters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract letters from a string — only_letters","text":"","code":"only_letters(x)"},{"path":"/reference/standardize_date.html","id":null,"dir":"Reference","previous_headings":"","what":"function to standardize date variable — standardize_date","title":"function to standardize date variable — standardize_date","text":"function standardize date variable","code":""},{"path":"/reference/standardize_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to standardize date variable — standardize_date","text":"","code":"standardize_date(data, date.column.name = NULL, format = NULL)"},{"path":"/reference/standardize_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to standardize date variable — standardize_date","text":"data data frame date column standardise date.column.name name date column interest. default: 'Date', 'DATE', 'date' format format date values date column","code":""},{"path":"/reference/standardize_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"function to standardize date variable — standardize_date","text":"data frame specified date column converted format 'yyyy-mm-dd'","code":""}]
